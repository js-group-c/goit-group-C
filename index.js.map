{"version":3,"file":"index.js","sources":["../src/js/all-categories.js","../src/js/booksAPI.js","../src/js/spinner.js","../src/js/main-page.js"],"sourcesContent":["const url = 'https://books-backend.p.goit.global/books/category-list';\nfetch(url)\n  .then(response => {\n    return response.json();\n  })\n  .then(data => {\n    data.forEach(cat => {\n        const markup = `<li class=\"ctg\"><a href=\"./\">${cat.list_name}</a></li>`;\n        document.getElementById('categories').insertAdjacentHTML(\"beforeend\", markup);\n    })\n  })\n  .catch(function(error) {\n    console.log(error);\n  });\n\n","import axios from 'axios';\n\nconst BASE_URL = \"https://books-backend.p.goit.global\";\nconst END_POINTS = [\n    \"/books/category-list\",\n    \"/books/top-books\",\n    \"/books/category\",\n    \"/books\",\n];\n\n\n//Belirtilen kategorideki kitapların listesini API' den getiriyor.\nexport async function getCategoryList() {\n    const url = \"${BASE_URL}${END_POINTS[0]}\";\n    try {\n        const response = await axios.get(url);\n        const sortedData = response.data.sort((a, b) =>\n            a.list_name.localeCompare(b.list_name)\n        );\n        return sortedData;\n    } catch (error) {\n        console.error(\"Error fetching category list: \", error);\n        throw error;\n    }\n}\n\n\n//En çok satan kitapları API' den getiriyor.\nexport async function getTopBooks() {\n    const url = `${BASE_URL}${END_POINTS[1]}`;\n    try {\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching top books: \", error);\n        throw error;\n    }\n}\n\n\n//Belirtilen kategorideki kitapları API' den getiriyor.\nexport async function getBooksByCategory(category) {\n    const url = `${BASE_URL}${END_POINTS[2]}`;\n    const params = {\n        category: category,\n    };\n    try {\n        const response = await axios.get(url, { params });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching books by category: \", error);\n        throw error;\n    }\n}\n\n\n//Belirtilen ID'ye sahip kitabı API' den getiriyor.\nexport async function getBookById(id) {\n    const url = `${BASE_URL}${END_POINTS[3]}/${id}`;\n    try {\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching book by ID: \", error);\n        throw error;\n    }\n}\n\n\n//Birden fazla kitabı ID'lerine göre API'den getiriyor.\nexport async function getBookByIds(idsArray) {\n    try {\n        const booksArray = [];\n        for (id of idsArray) {\n            const url = `${BASE_URL}${END_POINTS[3]}/${id}`;\n            const response = await axios.get(url);\n            booksArray.push(response.data);\n        }\n        return booksArray;\n    } catch (error) {\n        console.error(\"Error fetching books by IDs: \", error);\n        throw error;\n    }\n}\n\n\n","import { Spinner } from 'spin.js';\n\nlet opts = {\n    lines: 13,\n    length: 38,\n    width: 17,\n    radius: 45,\n    scale: 1,\n    corners: 1,\n    speed: 1,\n    rotate: 0,\n    animation: 'spinner-line-fade-quick',\n    direction: 1,\n    color: '#ffffff',\n    fadeColor: 'transparent',\n    top: '50%',\n    left: '50%',\n    shadow: '0 0 1px transparent',\n    zIndex: 2000000000,\n    className: 'spinner',\n    position: 'absolute',\n};\n\nconst spinner = new Spinner(opts);\n\nexport const spinnerPlay = containerRef => {\n  spinner.spin(containerRef);\n};\n\nexport const spinnerStop = () => {\n  spinner.stop();\n};","import { getTopBooks, getBooksByCategory } from './booksAPI.js';\nimport { spinnerPlay, spinnerStop } from './spinner.js';\n\nconst references = {\n  topListElem: document.querySelector('#topList'),\n  categoryListElem: document.querySelector('#categoryList'),\n  titleElement: document.querySelector('.top_list-title'),\n  allCategoriesElement: document.querySelector('#categories'),\n};\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  document.addEventListener('click', clickSeeMore); //See More butonuna tıklanınca ilgili kategoriye ait kitapları gösterir.\n  document.addEventListener('click', clickByBook); //Bir kitap kartına tıklanınca detaylarını gösteren modal açar.\n  document.addEventListener('click', clickByAllCategories); //Bir kategoriye tıklanınca bu kategorinin kitapları gösterir.\n});\n\n//En Çok Satanlar Listesini Getirme\ndocument.addEventListener('DOMContentLoaded', async function () {\n  spinnerPlay(references.titleElement);\n  references.topListElem.innerHTML = '';\n  const topListData = getTopBooks();\n  const topList = await topListData;\n  let html = '';\n  topList.forEach(elem => {\n    html += renderTopList(elem);\n  });\n  references.topListElem.innerHTML = html;\n  spinnerStop();\n});\n\n//En Çok Satanlar Listesini Renderleme\nfunction renderTopList(elem) {\n  return `<li class=\"top_list-container\">\n            <h2 class=\"top_list-category_name\">${elem.list_name}</h2>\n            <ul class=\"top_list-cards\">${renderBooks(elem.books)}</ul>\n            <button class=\"top_list-see_more\" data-category=\"${\n              elem.list_name\n            }\">See More</button>\n        </li>`;\n}\n\n//Kitap kartlarının oluşturulması (kapak, başlık ve yazar ismi)\nfunction renderBooks(books) {\n  let i = 1;\n  const bookHtml = books\n    .map(\n      book => `\n        <li class=\"top_list-card\" data-book-sequence-number=\"${i++}\">\n            <div class=\"top_list-book_cover_wrapper\" data-bookid=\"${book._id}\">\n                <img class=\"top_list-book_cover\" src=\"${book.book_image}\" alt=\"${book.title}\">\n            </div>\n            <h3 class=\"top_list-book_title\">${book.title}</h3>\n            <p class=\"top_list-book_author\">${book.author}</p>\n        </li>\n        `\n    )\n    .join('');\n  i++;\n  return bookHtml; \n}\n\nconst clickByBook = function (event) {\n  const bookWrapper = event.target.closest('.top_list-book_cover_wrapper');\n  if (bookWrapper) {\n    const bookId = bookWrapper.dataset.bookid;\n    onOpenModal(bookId); //kitap ID' si ile birlikte modal açma fonksiyonunu çalıştırır.\n  }\n};\n\nconst clickSeeMore = function (event) {  \n    if (event.target.classList.contains(\"top_list-see_more\")) { \n        references.topListElem.classList.add(\"hidden\");   //Üst kısımdaki kitap listesi gizlenir.\n        references.categoryListElem.classList.remove(\"hidden\");   //Kategorilerin bulunduğu liste alanı gösterilir.\n        const category = event.target.dataset.category;\n        titleCategory(category);   //Seçilen kategorinin başlığını değiştirir.\n        categoryList(category);   //Seçilen kategoriye ait kitapları getirip listeler.\n        allCategoriesActive(category);   //Seçilen kategoriyi aktif hale getirir. Görsel vurgulama ekler.\n    }\n};\n\nconst clickByAllCategories = async function (event) {\n  if (event.target.classList.contains('all_categories')) {\n    references.titleElement.innerHTML = 'Best Sellers <span>Books</span>';\n    references.categoryListElem.classList.add('hidden');\n    references.topListElem.classList.remove('hidden');\n    allCategoriesActive('All categories');\n  }\n  if (event.target.classList.contains('link')) {\n    references.titleElement.innerHTML = 'Best Sellers <span>Books</span>';\n    references.categoryListElem.classList.add('hidden');\n    references.topListElem.classList.remove('hidden');\n  }\n};\n\n//Kategoriye Ait Kitapların Listesini Getirme\nasync function categoryList(category) {\n  try {\n    spinnerPlay(references.titleElement);\n    references.categoryListElem.innerHTML = '';\n\n    const categoryData = await getBooksByCategory(category);\n    let html = '';\n\n    categoryData.forEach(book => {\n      html += `\n          <li class=\"category_list-card\">\n              <div class=\"top_list-book_cover_wrapper\" data-bookid=\"${book._id}\">\n                  <img class=\"top_list-book_cover\" src=\"${book.book_image}\" alt=\"${book.title}\">\n                  <div class=\"quick-view-text\">Quick view</div>\n              </div>\n              <h3 class=\"top_list-book_title\">${book.title}</h3>\n              <p class=\"top_list-book_author\">${book.author}</p>\n          </li>\n          `;\n    });\n\n    html += `<li><button class=\"all_categories\">All Categories</button></li>`;\n    references.categoryListElem.innerHTML = html;\n  } catch (error) {\n    console.error('Kategori verisi alınırken hata oluştu:', error);\n    references.categoryListElem.innerHTML = '<p>Kitaplar yüklenirken bir hata oluştu.</p>';\n  } finally {\n    spinnerStop();\n  }\n}\n"],"names":["url","response","data","cat","markup","error","BASE_URL","END_POINTS","getTopBooks","axios","getBooksByCategory","category","params","opts","spinner","Spinner","spinnerPlay","containerRef","spinnerStop","references","clickSeeMore","clickByBook","clickByAllCategories","topList","html","elem","renderTopList","renderBooks","books","i","bookHtml","book","event","bookWrapper","bookId","categoryList","categoryData"],"mappings":"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"}